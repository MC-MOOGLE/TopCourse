def getnumber(msg:str) -> int:
    IsFound = False
    while not IsFound:
        try:
            num = input("–í–≤–µ–¥–∏—Ç–µ " + msg)
            float(num)
            IsFound = True
            return float(num)
        except ValueError:
            print("–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


def printcolor(string:str, code:int):
    print(f"\033[{code}m{string}\033[0m")


def checksym(n1:float, n2:float, n3:float) -> str:
    print("\n")
    printcolor("–°—É–º–º–∞ —á–∏—Å–µ–ª: +", 32)
    printcolor("–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —á–∏—Å–µ–ª: *", 32)
    printcolor("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: max | ^", 32)
    printcolor("–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: min | v", 32)
    printcolor("–°—Ä–µ–¥–Ω–µ–µ —á–∏—Å–µ–ª: avg | =/ | üíÄ | (‚î¨‚î¨Ôπè‚î¨‚î¨)", 32)
    sym = str(input("–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞: "))
    result = float
    match sym:
        case "+":
            result = n1 + n2 + n3
        case "*":
            result = n1 * n2 * n3
        case "max" | "^":
            result = max(n1, n2, n3)
        case "min" | "v":
            result = min(n1, n2, n3)
        case "avg" | "=/" | "üíÄ" | "(‚î¨‚î¨Ôπè‚î¨‚î¨)":
            result = (n1 + n2 + n3) / 3
        case _:
            print("\n")
            printcolor("–î–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ", 38)
            checksym(n1, n2, n3)
    return str(result)

def convertm(m):
    print("\n")
    printcolor("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ –º–∏–ª–∏: miles", 32)
    printcolor("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ –¥—é–π–º—ã: inches", 32)
    printcolor("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ —è—Ä–¥—ã: yards", 32)
    conv = str(input("–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞: "))
    result = float
    match conv:
        case "miles":
            result = m / 1609
        case "inches":
            result = m * 39.37
        case "yards":
            result = m * 1.094
        case _:
            print("\n")
            printcolor("–î–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ", 38)
            convertm(m)
    return str(result) + " " + conv
            

def t1():
    printcolor("–ó–∞–¥–∞–Ω–∏–µ 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ç—Ä–∏ —á–∏—Å–ª–∞. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å—É–º–º—É —Ç—Ä–µ—Ö —á–∏—Å–µ–ª –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ—Ö —á–∏—Å–µ–ª.", 33)
    printcolor("–Ø –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –∑–∞—á–µ–º –¥–µ–ª–∏—Ç—å —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –¥–≤–∞, —Ç–∞–∫ —á—Ç–æ —è –æ–±—ä–µ–¥–∏–Ω—é –∏—Ö", 35)
    printcolor("–ó–∞–¥–∞–Ω–∏–µ 2. ... –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –º–∞–∫—Å–∏–º—É–º –∏–∑ —Ç—Ä–µ—Ö, –º–∏–Ω–∏–º—É–º –∏–∑ —Ç—Ä–µ—Ö –∏–ª–∏ —Å—Ä–µ–¥–Ω–µ–∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ —Ç—Ä–µ—Ö —á–∏—Å–µ–ª.", 33)
    printcolor("–†–µ–∑—É–ª—å—Ç–∞—Ç: " + checksym(getnumber("–ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: "), getnumber("–≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: "), getnumber("—Ç—Ä–µ—Ç—å–µ —á–∏—Å–ª–æ: ")), 34)

def t2():
    printcolor("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Ç—Ä–æ–≤. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –º–µ—Ç—Ä—ã –≤ –º–∏–ª–∏, –¥—é–π–º—ã –∏–ª–∏ —è—Ä–¥—ã.", 33)
    meters = convertm(getnumber("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Ç—Ä–æ–≤: "))
    printcolor(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {meters}", 34)

while True:
    task = getnumber("–Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è: 1, 2 ; –î–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ 0: ")
    if task == 1:
        t1()
    elif task == 2:
        t2()
    elif task == 0:
        break    
    print("\n\n")
    

